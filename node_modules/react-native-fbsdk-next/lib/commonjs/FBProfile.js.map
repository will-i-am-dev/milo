{"version":3,"sources":["FBProfile.js"],"names":["Platform","NativeModules","require","Profile","FBProfile","constructor","profileMap","firstName","lastName","middleName","linkURL","imageURL","userID","email","OS","name","Object","freeze","getCurrentProfile","Promise","resolve","reject","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAM;AAACA,EAAAA,QAAD;AAAWC,EAAAA;AAAX,IAA4BC,OAAO,CAAC,cAAD,CAAzC;;AACA,MAAMC,OAAO,GAAGF,aAAa,CAACG,SAA9B;;AAaA;AACA;AACA;AACA;AACA,MAAMA,SAAN,CAAgB;AACd;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AAGEC,EAAAA,WAAW,CAACC,UAAD,EAAyB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAClC,SAAKC,SAAL,GAAiBD,UAAU,CAACC,SAA5B;AACA,SAAKC,QAAL,GAAgBF,UAAU,CAACE,QAA3B;AACA,SAAKC,UAAL,GAAkBH,UAAU,CAACG,UAA7B;AACA,SAAKC,OAAL,GAAeJ,UAAU,CAACI,OAA1B;AACA,SAAKC,QAAL,GAAgBL,UAAU,CAACK,QAA3B;AACA,SAAKC,MAAL,GAAcN,UAAU,CAACM,MAAzB;AACA,SAAKC,KAAL,GAAab,QAAQ,CAACc,EAAT,KAAgB,SAAhB,GAA4B,IAA5B,GAAmCR,UAAU,CAACO,KAA3D;AACA,SAAKE,IAAL,GAAYT,UAAU,CAACS,IAAvB;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACD;AAED;AACF;AACA;;;AAC0B,SAAjBC,iBAAiB,GAAwB;AAC9C,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtClB,MAAAA,OAAO,CAACe,iBAAR,CAA2BZ,UAAD,IAAgB;AACxC,YAAIA,UAAJ,EAAgB;AACdc,UAAAA,OAAO,CAAC,IAAIhB,SAAJ,CAAcE,UAAd,CAAD,CAAP;AACD,SAFD,MAEO;AACLc,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,OAND;AAOD,KARM,CAAP;AASD;;AApEa;;AAuEhBE,MAAM,CAACC,OAAP,GAAiBnB,SAAjB","sourcesContent":["/**\n * @flow\n * @format\n */\n\n'use strict';\n\nconst {Platform, NativeModules} = require('react-native');\nconst Profile = NativeModules.FBProfile;\n\ntype ProfileMap = {\n  firstName: string,\n  lastName: string,\n  middleName: string,\n  imageURL: string,\n  linkURL: string,\n  userID: string,\n  email: string,\n  name: string,\n};\n\n/**\n * Represents an immutable Facebook profile\n * This class provides a global \"currentProfile\" instance to more easily add social context to your application.\n */\nclass FBProfile {\n  /**\n   * The user id\n   */\n  userID: ?string;\n\n  /**\n   * The user's email.\n   * IMPORTANT: This field will only be populated if your user has granted your application the 'email' permission.\n   */\n  email: ?string;\n\n  /**\n   * The user's complete name\n   */\n  name: ?string;\n\n  /**\n   * The user's first name\n   */\n  firstName: ?string;\n\n  /**\n   * The user's last name\n   */\n  lastName: ?string;\n\n  /**\n   * The user's middle name\n   */\n  middleName: ?string;\n\n  /**\n   * A URL to the user's profile.\n   * IMPORTANT: This field will only be populated if your user has granted your application the 'user_link' permission\n   */\n  linkURL: ?string;\n\n  /**\n   * A URL to use for fetching a user's profile image.\n   */\n  imageURL: ?string;\n\n  constructor(profileMap: ProfileMap) {\n    this.firstName = profileMap.firstName;\n    this.lastName = profileMap.lastName;\n    this.middleName = profileMap.middleName;\n    this.linkURL = profileMap.linkURL;\n    this.imageURL = profileMap.imageURL;\n    this.userID = profileMap.userID;\n    this.email = Platform.OS === 'android' ? null : profileMap.email;\n    this.name = profileMap.name;\n    Object.freeze(this);\n  }\n\n  /**\n   * Getter the current logged profile\n   */\n  static getCurrentProfile(): Promise<?FBProfile> {\n    return new Promise((resolve, reject) => {\n      Profile.getCurrentProfile((profileMap) => {\n        if (profileMap) {\n          resolve(new FBProfile(profileMap));\n        } else {\n          resolve(null);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = FBProfile;\n"]}